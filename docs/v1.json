{"openapi":"3.1.0","info":{"title":"Mercury API","description":"### Overview\nMercury API provides the backend services for the Mercury platform.\nCurrently, its primary focus is to support functionalities for **employee management** and the handling of related **HR processes and workflows**.\nThis includes managing employee data, controlling onboarding/offboarding, administering absences, and facilitating other HR operations.\n\n### Error Message Language\nThe language of error messages returned by the API can be controlled by the client using the `Accept-Language` HTTP header.\nSupported languages include English (default, `en`), German (`de`), and French (`fr`).\nIf an unsupported language is requested, a key is missing for the requested language, or if the `Accept-Language` header is omitted, error messages will default to English.\n\n### Authentication\nMost endpoints are secured using Bearer Token authentication (JWT).\nA token can typically be obtained via an authentication endpoint (e.g., `/auth/login`).\n\n### Key Concepts (Current Focus)\n* **Employee:** Represents an employee within the system (supersedes generic 'User' for core functions).\n* **Workflow:** A defined HR process (e.g., leave request, performance review).\n* **Action/Task:** A specific step within a workflow requiring interaction or completion.\n","termsOfService":"https://example.com/terms","contact":{"name":"Mercury Dev Team","url":"https://github.com/sergej-stk/mercury","email":"mercury-dev@example.com"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.html"},"version":"1.0.0","summary":"API for the Mercury platform, focusing on employee management, HR processes, and workflows.","x-logo":{"backgroundColor":"#FFFFFF","altText":"Mercury API Logo","href":"https://mercury.sergejsteinsiek.com/","url":"https://raw.githubusercontent.com/sergej-stk/mercury/refs/heads/main/assets/logo.png"}},"externalDocs":{"description":"GitHub Repository","url":"https://github.com/sergej-stk/mercury"},"servers":[{"url":"http://localhost:8080","description":"Development Server"},{"url":"https://api.mercury.example.com","description":"Production Server"}],"tags":[{"name":"Authentication","description":"Authentication and token management.","externalDocs":{"description":"Find out more","url":"https://github.com/sergej-stk/mercury"}},{"name":"Users","description":"Operations related to user accounts.","externalDocs":{"description":"Find out more","url":"https://github.com/sergej-stk/mercury"}}],"paths":{"/v1/auth/register":{"post":{"tags":["Authentication"],"summary":"Register a new user","description":"Creates a new user account based on the provided details in the request body.","operationId":"registerUser","parameters":[{"name":"Accept-Language","in":"header","description":"Preferred response language (e.g., 'en', 'de', 'fr').","required":false,"schema":{"default":"en","enum":["en","de","fr"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUser"}}},"required":true},"responses":{"201":{"description":"User successfully registered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid input data provided (e.g., validation errors)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}},"409":{"description":"User already registered (email or username already exists)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}}}}},"/v1/auth/oauth2/refresh":{"post":{"tags":["Authentication"],"summary":"Refresh access token","description":"Generates a new access token using a valid refresh token (refresh_token grant type).","operationId":"refreshToken","parameters":[{"name":"Accept-Language","in":"header","description":"Preferred response language (e.g., 'en', 'de', 'fr').","required":false,"schema":{"default":"en","enum":["en","de","fr"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshRequest"}}},"required":true},"responses":{"201":{"description":"Access token refreshed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshResponse"}}}},"400":{"description":"Invalid request (e.g., missing refresh token or invalid grant type)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}},"403":{"description":"Invalid, expired, or revoked refresh token, or client authentication failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}}}}},"/v1/auth/oauth2/login":{"post":{"tags":["Authentication"],"summary":"Login user","description":"Authenticates a user with their credentials (password grant type) and returns access and refresh tokens.","operationId":"loginUser","parameters":[{"name":"Accept-Language","in":"header","description":"Preferred response language (e.g., 'en', 'de', 'fr').","required":false,"schema":{"default":"en","enum":["en","de","fr"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthRequest"}}},"required":true},"responses":{"201":{"description":"Authentication successful, tokens generated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponse"}}}},"400":{"description":"Invalid input data provided (e.g., missing credentials or invalid grant type)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}},"403":{"description":"Authentication failed (invalid username or password, or client authentication failed)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}}}}},"/v1/users/{id}":{"get":{"tags":["Users"],"summary":"Get user by ID","description":"Retrieves a user's details based on the provided UUID. Returns the user if found.","operationId":"getUserById","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Accept-Language","in":"header","description":"Preferred response language (e.g., 'en', 'de', 'fr').","required":false,"schema":{"default":"en","enum":["en","de","fr"]}}],"responses":{"200":{"description":"User found and returned successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"404":{"description":"User with the provided ID does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}}}}}},"components":{"schemas":{"CreateUser":{"type":"object","description":"Data required to create a new user account.","properties":{"username":{"type":"string","description":"The desired unique username for the new user. Must be between 3 and 50 characters.","example":"new.user","maxLength":50,"minLength":3,"title":"Username"},"email":{"type":"string","format":"email","description":"The desired unique email address for the new user. Must be a valid email format and max 100 characters.","example":"new.user@example.com","maxLength":254,"minLength":5,"title":"Email Address"},"password":{"type":"string","format":"password","description":"The desired password for the new user. Must meet complexity requirements (e.g., min 8 characters, max 25 characters, contain uppercase, lowercase, digit, special character).","example":"S3cureP@ssw0rd!","maxLength":25,"minLength":8,"title":"Password","writeOnly":true}},"required":["email","password","username"],"title":"User Create"},"User":{"type":"object","description":"Represents a user with identifiers, core profile information (username, email), and system metadata. Suitable for API responses displaying user details.","properties":{"id":{"type":"string","format":"uuid","description":"A stable, unique identifier (UUID) used for referencing the user in public APIs or between systems. Not intended for direct display to end-users.","example":"a1b2c3d4-e5f6-7890-1234-567890abcdef","readOnly":true,"title":"ID"},"displayId":{"type":"string","description":"A user-friendly, human-readable, unique identifier intended for display to end-users or for easy reference. Format: String, 6-25 characters.","example":"USR-GHT7Y2","readOnly":true,"title":"User Display ID"},"username":{"type":"string","description":"The user's unique username, used for login and identification within the application. Length: 3-50 characters.","example":"john.doe","readOnly":true,"title":"Username"},"email":{"type":"string","format":"email","description":"The user's unique email address, used for communication and potentially login or password recovery. Max length: 100 characters.","example":"john.doe@example.com","readOnly":true,"title":"Email Address"}},"required":["displayId","email","id","username"],"title":"User"},"ErrorDetails":{"type":"object","description":"Represents a standardized error response containing essential details like timestamp, HTTP status code, a unique error code, an error message, and the API endpoint that generated the response.","properties":{"timestamp":{"type":"string","format":"date-time","description":"The date and time (with time zone offset) when the error response was generated.","example":"2025-05-06T00:35:09.123+02:00","title":"Timestamp"},"status":{"type":"integer","format":"int32","description":"The HTTP status code indicating the outcome of the API request.","example":404,"title":"HTTP Status Code"},"errorCode":{"type":"string","description":"A unique, application-specific, machine-readable code identifying the type of error. Useful for programmatic error handling by clients.","example":"E-USER-0002","title":"Internal Error Code"},"message":{"type":"string","description":"A human-readable description of the error that occurred.","example":"Item with ID '123' could not be found.","title":"Error Message"},"path":{"type":"string","description":"The API endpoint (path) that produced this error response.","example":"/api/v1/items/123","title":"API Path"},"debugId":{"type":"string","format":"uuid","description":"A unique identifier (UUID) assigned to this specific error instance, useful for debugging and tracing purposes (e.g., correlating with logs).","example":"f81d4fae-7dec-11d0-a765-00a0c91e6bf6","title":"Debug ID"}},"title":"Error Details"},"RefreshRequest":{"type":"object","description":"Represents the data required to request a new access token using a refresh token.","properties":{"grant_type":{"type":"string","description":"The type of OAuth 2.0 grant being used. This must be 'refresh_token' for token renewal requests.","enum":["refresh_token"],"example":"refresh_token","title":"Grant Type","writeOnly":true},"refresh_token":{"type":"string","description":"The previously issued refresh token used to obtain a new access token.","example":"sample-refresh-token-12345","title":"Refresh Token","writeOnly":true},"client_id":{"type":"string","description":"The unique identifier of the client requesting the token renewal. This may be required depending on the server configuration.","example":"my-api-client-id","title":"Client ID","writeOnly":true}},"required":["grant_type","refresh_token"],"title":"Refresh Request"},"RefreshResponse":{"type":"object","description":"Represents the response returned after successfully refreshing an access token.","properties":{"access_token":{"type":"string","description":"The newly issued access token used to access protected resources.","example":"sample-access-token-abc123","readOnly":true,"title":"Access Token"},"token_type":{"type":"string","description":"The type of the issued token, typically 'Bearer'.","example":"Bearer","readOnly":true,"title":"Token Type"},"expires_in":{"type":"integer","format":"int64","description":"The lifetime of the access token in seconds.","example":3600,"readOnly":true,"title":"Expires In"},"refresh_token":{"type":"string","description":"The newly issued refresh token. If not present, the previous one may still be valid.","example":"sample-refresh-token-xyz789","readOnly":true,"title":"Refresh Token"}},"required":["access_token","expires_in","token_type"],"title":"Refresh Response"},"AuthRequest":{"type":"object","description":"Represents the request data required to obtain an access token. This may include credentials such as username and password, or a refresh token, depending on the grant type used.","properties":{"grant_type":{"type":"string","description":"The type of OAuth 2.0 grant. Common values are 'password' for authentication with username and password, or 'refresh_token' for renewing an access token.","enum":["password","refresh_token"],"example":"password","title":"Grant Type","writeOnly":true},"username":{"type":"string","description":"The username of the user requesting an access token. Required if the grant type is 'password'.","example":"john.doe","title":"Username","writeOnly":true},"password":{"type":"string","format":"password","description":"The user's password. Required if the grant type is 'password'.","example":"Str0ngP@sswOrd!","title":"Password","writeOnly":true},"refresh_token":{"type":"string","description":"The refresh token used to obtain a new access token.","example":"sample-refresh-token-xyz789","title":"Refresh Token","writeOnly":true},"client_id":{"type":"string","description":"The unique identifier of the client requesting the token. May be required for certain grant types or server configurations.","example":"myApiClientId","title":"Client ID","writeOnly":true}},"required":["grant_type"],"title":"Auth Request"},"AuthResponse":{"type":"object","description":"Represents the response data returned after a successful access token request.","properties":{"access_token":{"type":"string","description":"The issued access token used to access protected resources.","example":"sample-access-token-abc123","readOnly":true,"title":"Access Token"},"refresh_token":{"type":"string","description":"The refresh token used to obtain new access tokens.","example":"sample-refresh-token-xyz789","readOnly":true,"title":"Refresh Token"},"token_type":{"type":"string","description":"The type of the issued token. Typically 'Bearer'.","example":"Bearer","readOnly":true,"title":"Token Type"},"expires_in":{"type":"integer","format":"int64","description":"The lifetime of the access token in seconds.","example":3600,"readOnly":true,"title":"Expires In"}},"required":["access_token","expires_in","token_type"],"title":"Auth Response"}},"securitySchemes":{"bearerAuth":{"type":"http","description":"Bearer Authentication with JWT. Include the token in the 'Authorization' header as 'Bearer {token}'.","name":"Authorization","in":"header","scheme":"bearer","bearerFormat":"JWT"}}}}